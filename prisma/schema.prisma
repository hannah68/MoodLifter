generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("DATABASE_SHADOW")
}

model User {
    id              Int       @id @default(autoincrement())
    createdAt       DateTime  @default(now())
    updatedAt       DateTime  @updatedAt
    username        String    @unique
    email           String
    password        String    
    diary           Diary[]
    favPerson       FavPerson[]
    favPlace        FavPlace[]
    gratitude       Gratitude[]
    accomplishment  Accomplishment[]
    passion         Passion[]
}

model Diary {
    id        Int       @id @default(autoincrement())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    diaryType String
    text      String
    user      User      @relation(fields: [userId], references: [id])
    userId    Int
}

model FavPerson {
    id        Int       @id @default(autoincrement())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    name      String
    user      User      @relation(fields: [userId], references: [id])
    userId    Int
}

model FavPlace {
    id        Int       @id @default(autoincrement())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    name      String
    user      User      @relation(fields: [userId], references: [id])
    userId    Int
}

model Gratitude {
    id        Int       @id @default(autoincrement())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    text      String
    user      User      @relation(fields: [userId], references: [id])
    userId    Int
}

model Accomplishment {
    id        Int       @id @default(autoincrement())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    text      String
    user      User      @relation(fields: [userId], references: [id])
    userId    Int
}

model Passion {
    id        Int       @id @default(autoincrement())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    text      String
    user      User      @relation(fields: [userId], references: [id])
    userId    Int
}